# -*- coding: utf-8 -*-
"""day 3 task .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16pilA3z2SGYxyOl7h3PReCeFx9PcesZ7
"""

# display
def  show():
   print("hello python:")
show()

# sum
def sum():
  a = int(input("enter a number:"))
  b= int (input("enter a number"))
  sum = a+b
  print("the sum is :",sum)
sum()

# largest of three numbers
def display():
    a = int (input("enter a number:"))
    b= int (input("enter a number:"))
    c= int(input("enter a number:"))
    if a>b and a>c:
      print("a is largest")
    elif b>a and b>c:
      print("b is largest")
    else:
      print("c is largest")
display()

#palindrome
def palindrome():
  a = input("enter a number:")
  if a==a[::-1]:
    print("palindrome:")
  else:
    print("not palindrome:")
palindrome()

# armstrong number
def armstrong():
  a = int(input("enter a number:"))
  sum=0
  temp=a
  while temp>a:
   sum= sum+((temp%10)**3)
   temp= temp//10
  if a==sum:
    print("it is a armstrong number:")
  else:
    print("it is not a palindrome:")
armstrong()

# power
def power():
  a = int(input("enter a number:"))
  b = int (input("enter a number:"))
  print(a**b)
power()

#simple calculator
def calculator():
  a = int (input("enter  number:"))
  b= int(input("enter number:"))
operation = input("enter  operation:")
if operation =='+':
      print("addition:")
      print(a+b)
elif operation =='-':
      print("substraction:")
      print(a-b)
elif operation == '*' :
      print("multiplication:")
      print(a*b)
elif operation =='/':
      print("division:")
      print(a/b)
else:
      print("invalid operation:")
calculator()

# even or odd

def even_or_odd():
  a = int(input("enter  number:"))
  if a%2==0:
     print("even:")
  else :
     print("odd:")
even_or_odd()

# reversed string
def reversed_string():
  a= ("enter  string:")
  print(a[::-1])

reversed_string()

#sum of digits
def sum():
  a = int (input("enter number:"))
  b = int (input("enter number:"))
  sum = a+b
  print("sum of numbers:", sum)
sum()

# default argument
def greef(name= "guest"):
 print(f"hello,{name}")
greef()
greef("syeda")

# factorial
def factorial():
  a = int (input("enter number:"))
  fact=1
  for i in range(a,a+1):
    fact = fact*i
    print("factorial",fact)
factorial()

#prime number check
def prime():
  num = int (input("enter number"))
  if num%5==0:
    print("it is a prime:")
  else:
    print("it is not a prime:")
prime()

#key word arguments
def ct ( colour , name):
    print(f"the person({colour}),is ({name})")
ct(colour = "blue",name = "syeda")

#using math module
import math
print(math.sqrt(44))
print(math. factorial(12))

# using random module
import random
print(random.randint(1,100))
print(random.choice([1,2,3,4,5]))

# gcd

def gcd(a, b):
    while b==0:
        a, b = b, a % b
    return a
    num1 = int (input("enter number:"))
    num2= int(input("enter number:"))
    result = gcd(num1,num2)

print("the GCD of {num1} and {num2} is {result}")

#lambda function for squaring
square=lambda x:x**2
print(square(5))

# lambda function for sorting
points = [(2,3),(1,5),(4,7)]
points . sort (key = lambda x:x[1])
print(points)